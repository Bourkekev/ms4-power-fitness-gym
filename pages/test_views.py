from django.test import TestCase
from django.urls import resolve

from . import views
from .forms import ContactUsForm


class SimpleTests(TestCase):
    def test_home_page_status_code(self):
        response = self.client.get('/')
        self.assertEqual(response.status_code, 200)

    def test_home_page_url_resolves_home_page_view(self):
        # class-based views need to be compared by name, as the functions
        # generated by as_view() won't be equal
        view = resolve('/')
        self.assertEquals(
            view.func.__name__,
            views.HomePageView.as_view().__name__
            )

    def test_contact_page_status_code(self):
        response = self.client.get('/contact/')
        self.assertEqual(response.status_code, 200)

    def test_contact_page_uses_contact_form(self):
        response = self.client.get('/contact/')
        self.assertIsInstance(response.context['contact_form'], ContactUsForm)

    def test_gym_memberships_page_status_code(self):
        response = self.client.get('/gym-memberships/')
        self.assertEqual(response.status_code, 200)

    def test_delivery_information_page_status_code(self):
        response = self.client.get('/delivery-information/')
        self.assertEqual(response.status_code, 200)

    def test_return_policy_page_status_code(self):
        response = self.client.get('/return-policy/')
        self.assertEqual(response.status_code, 200)

    def test_guarantee_page_status_code(self):
        response = self.client.get('/guarantee/')
        self.assertEqual(response.status_code, 200)

    def test_secure_payment_page_status_code(self):
        response = self.client.get('/secure-payment/')
        self.assertEqual(response.status_code, 200)

    def test_cancellation_policy_page_status_code(self):
        response = self.client.get('/cancellation-policy/')
        self.assertEqual(response.status_code, 200)
